{"data":{"site":{"siteMetadata":{"title":"Discordeno","docsLocation":"https://github.com/Skillz4Killz/Discordeno"}},"mdx":{"fields":{"id":"270b9eee-7f5c-5af5-8276-561c8e63a877","title":"Creating Inhibitors!","slug":"/stepbystep/createinhibitor"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating Inhibitors!\",\n  \"metaTitle\": \"Creating An Inhibitor | Discordeno\",\n  \"metaDescription\": \"Let's create our very own bot with Discordeno!\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Woah! You are almost half way done with understanding all of Discordeno. Amazing isn't it? Something you may have noticed in the last section was there were some options that prevented some commands from running like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dmOnly\"), \" or the permission options. we created a setting to prevent the monitor from running in certain channels. What if we wanted to do prevent commands from happening? How would we prevent commands from running?\"), mdx(\"h2\", null, \"What is an Inhibitor?\"), mdx(\"p\", null, \"An Inhibitor is very similar to how monitors work. A monitor runs on every message but an inhibitor runs on every command. Remember all those command options like cooldown, permissions, permissionLevel, nsfw, etc... Each and every one of these options has an inhibitor in that checks commands for these settings.\"), mdx(\"p\", null, \"Let's create our own inhibitor that would prevent commands from being used if the user is not a VIP user.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" It is important to remember that everything below can be done with a simple permission level as well. We will create our own custom permission levels but for the purposes of this guide and to be able to learn about Inhibitors, we will be using an inhibitor.\")), mdx(\"h2\", null, \"Creating the File\"), mdx(\"p\", null, \"Let's start by creating a file inside the inhibitors folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"boosted.ts\"), \" and paste the following snippet of code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { botCache } from \\\"../../mod.ts\\\";\\n\\nbotCache.inhibitors.set(\\\"inhibitorname\\\", async function (message, command, guild) {\\n    // Your code goes here\\n});\\n\")), mdx(\"p\", null, \"Inhibitors can take up to 3 arguments.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"message\"), \": The message object that triggered the command.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"command\"), \": The command object itself that was triggered.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"guild\"), \": The server guild object where this command was ran.\")), mdx(\"h2\", null, \"Understanding How Inhibitors Function\"), mdx(\"p\", null, \"To block a command you have to return a truthy value.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"return true;\"), \" If you return true the inhibitor will block the execution of the command.\\nTo allow a command return a falsey value.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"return false;\"), \" If you return false the inhibitor will not block the error.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// If the command is not VIP only we can allow this command to execute\\nif (!command.vipOnly) return false;\\n\\n// The bot's support server\\nconst guild = cache.guilds.get(configs.supportServerID);\\n// If the command author is not in the server they won't have the vip role\\nconst member = guild.members.get(message.author.id) || await getMember(guild.id, message.author.id);\\n// Member doesn't exist so cancel the command\\nif (!member) {\\n    sendResponse(message, `sorry, but you can not use this command until you become VIP. **Close the IRIS!!!**`)\\n    return true;\\n}\\n\\n// If the user has the vip role on the support server given by patreon allow the command\\nif (member.roles.includes(configs.roleIDs.patreonVIPRoleID)) return false;\\n\\n// Alert the user they don't have vip and can't use the command\\nsendResponse(message, `sorry, but you can not use this command until you become a VIP. I'm sorry, Teal'c. We'll go to Disneyland next year. I promise.`)\\n// Cancel the command since the user does not have vip\\nreturn true;\\n\")), mdx(\"h2\", null, \"Updating Command Typings\"), mdx(\"p\", null, \"Since we need a new option on our commands we need to add that. Open the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/types/commands.ts\"), \" file and add in the following\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"  vipOnly?: boolean;\\n\")), mdx(\"p\", null, \"Once that is added, you can go into any command and mark them as vip only commands.\"), mdx(\"h2\", null, \"Challenges\"), mdx(\"p\", null, \"Hell yes! We just got through the entire inhibitor section. You have now mastered everything related to inhibitors.\"), mdx(\"p\", null, \"You can now try and get a little more practice with inhibitors by trying to challenge yourself and make your own inhibitors. Don't worry if you can't think of any good use cases for inhibitors.\"), mdx(\"p\", null, \"Majority of Discordeno bots do not use many custom inhibitors because most of the necessary/important ones already come built for you in the inhibitors folder.\"), mdx(\"p\", null, \"Next we will try our hands at creating a monitor.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-is-an-inhibitor","title":"What is an Inhibitor?"},{"url":"#creating-the-file","title":"Creating the File"},{"url":"#understanding-how-inhibitors-function","title":"Understanding How Inhibitors Function"},{"url":"#updating-command-typings","title":"Updating Command Typings"},{"url":"#challenges","title":"Challenges"}]},"parent":{"__typename":"File","relativePath":"stepbystep/createinhibitor.md"},"frontmatter":{"metaTitle":"Creating An Inhibitor | Discordeno","metaDescription":"Let's create our very own bot with Discordeno!"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/faq","title":"FAQ"}}},{"node":{"fields":{"slug":"/","title":"Discordeno"}}},{"node":{"fields":{"slug":"/stepbystep","title":"Step By Step Guide"}}},{"node":{"fields":{"slug":"/gettingstarted","title":"Getting Started"}}},{"node":{"fields":{"slug":"/djs","title":"Discord.JS to Discordeno Guide"}}},{"node":{"fields":{"slug":"/stepbystep/createevent","title":"Creating Events!"}}},{"node":{"fields":{"slug":"/stepbystep/createmonitor","title":"Creating Monitors!"}}},{"node":{"fields":{"slug":"/stepbystep/createlanguage","title":"Creating Languages!"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/advanced/permlevels","title":"Permission Levels!"}}},{"node":{"fields":{"slug":"/advanced","title":"Advanced Guide"}}},{"node":{"fields":{"slug":"/stepbystep/createbot","title":"Creating The Bot!"}}},{"node":{"fields":{"slug":"/stepbystep/createinhibitor","title":"Creating Inhibitors!"}}},{"node":{"fields":{"slug":"/stepbystep/createcommand","title":"Creating A Command"}}}]}},"pageContext":{"id":"270b9eee-7f5c-5af5-8276-561c8e63a877"}}