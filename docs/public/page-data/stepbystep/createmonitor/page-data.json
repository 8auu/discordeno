{"componentChunkName":"component---src-templates-docs-js","path":"/stepbystep/createmonitor","result":{"data":{"site":{"siteMetadata":{"title":"Discordeno","docsLocation":"https://github.com/Skillz4Killz/Discordeno"}},"mdx":{"fields":{"id":"f5bbb667-a1ca-5872-9a8b-85a55b16c857","title":"Creating Monitors!","slug":"/stepbystep/createmonitor"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating Monitors!\",\n  \"metaTitle\": \"Creating A Monitor | Discordeno\",\n  \"metaDescription\": \"Let's create our very own bot with Discordeno!\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Holy bananza! You even got the entire languages complete. You are well on your way to mastering 23 different languages. Now we are going to down and dirty with monitors.\"), mdx(\"h2\", null, \"What is a monitor?\"), mdx(\"p\", null, \"Monitors are functions that will run on every single message that is sent in every channel that your bot has permissions to read. When you want to do something on every single message that is sent, the best way to do that is to create a new monitor.\"), mdx(\"h2\", null, \"Command Handler Monitor\"), mdx(\"p\", null, \"Discordeno come built with a monitor called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"commandHandler\"), \". This monitor runs on every message sent and figures out if it is a command and executes the command. If it is a valid command with a valid prefix, Discordeno runs that command.\"), mdx(\"p\", null, \"Let's try and create our own monitor so we can understand it better. Suppose we wanted to build a filter that would delete any message which included a discord invite link.\"), mdx(\"h2\", null, \"Creating Invite Filter Monitor\"), mdx(\"p\", null, \"To start, we make a new file in the monitors folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inviteFilter.ts\"), \". Then you can paste in the following base monitor snippet.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { botCache } from \\\"../../mod.ts\\\";\\n\\nbotCache.monitors.set(\\\"monitorname\\\", {\\n    name: \\\"monitorname\\\",\\n  ignoreBots: true,\\n  ignoreOthers: false,\\n  ignoreEdits: false,\\n  ignoreDM: true,\\n  userServerPermissions: [],\\n  userChannelPermissions: [],\\n  botServerPermissions: [],\\n  botChannelPermissions: [],\\n  execute: async function (message) {\\n        // Your code goes here\\n  },\\n});\\n\")), mdx(\"h2\", null, \"Understanding Monitor Options\"), mdx(\"p\", null, \"The monitor options are very similar in functionality with the command options.\"), mdx(\"h3\", null, \"Monitor Name\"), mdx(\"p\", null, \"Similar to the command name, we will specify a unique name for the monitors. In this case let's call it inviteFilter\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"botCache.monitors.set(\\\"monitorname\\\", {\\n    name: \\\"monitorname\\\",\\n\")), mdx(\"h3\", null, \"Ignore Options\"), mdx(\"p\", null, \"The ignore options are filters that you can use to enable/disable the monitor from running in those specific circumstances. The default option for each monitor is shown in the base snippet above.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ignoreBots\"), \": Should this monitor run on a message sent by a bot. In our example, if we set this false then no bot would be allowed to post links in the server. Since we don't want other bot's posting invite links either we can simply just set this to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ignoreOthers\"), \": Should this monitor run on other USERS. If we set this as false, then any user will not be allowed to post discord links. Since the default option for this is already \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \", let's go ahead and just delete this line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ignoreEdits\"), \": Should this monitor run on edited messaged. If we set this as false, then it would also be filtering messages that are edited. It would be important to prevent users from editing a message and posting a discord invite link so let's keep this \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \". Since the default is false, we can just delete this line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ignoreDM\"), \": Should this monitor run on direct messages. If we set this as false, then this monitor would not run when the bot is sent a dm. Since we don't care if the users send our bot a dm with an invite link we can just simply set this to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" Since the default is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" for this option we can simple delete this line.\")), mdx(\"p\", null, \"The default options were chosen for what the majority of monitors will use to help keep your code clean and clear.\"), mdx(\"h2\", null, \"Permission Options\"), mdx(\"p\", null, \"The permission options are the exact same from the commands guide. These options first make sure that either the bot or user has those necessary permissions to run this monitor. For example, our invite filter would mean we need \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MANAGE MESSAGES\"), \" permission so we can delete messages sent with an invite URL.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"  botChannelPermissions: [\\\"MANAGE_MESSAGES\\\"]\\n\")), mdx(\"h2\", null, \"Adding The Code\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { botCache } from \\\"../../mod.ts\\\";\\nimport { deleteMessage } from \\\"https://raw.githubusercontent.com/Skillz4Killz/Discordeno/v7/src/handlers/message.ts\\\";\\nimport { translate } from \\\"../utils/i18next.ts\\\";\\nimport { sendAlertResponse } from \\\"../utils/helpers.ts\\\";\\n\\nbotCache.monitors.set(\\\"inviteFilter\\\", {\\n  name: \\\"inviteFilter\\\",\\n  ignoreBots: false,\\n  botChannelPermissions: [\\\"MANAGE_MESSAGES\\\"],\\n  execute: async function (message) {\\n    // Use a regex to test if the content of the message has a valid discord invite link\\n    const hasInviteLink =\\n      /(https?:\\\\/\\\\/)?(www\\\\.)?(discord\\\\.(gg|li|me|io)|discordapp\\\\.com\\\\/invite)\\\\/.+/\\n        .test(message.content);\\n    // If the message does not have an invite link cancel out.\\n    if (!hasInviteLink) return;\\n\\n    // This message has an invite link, so delete the message.\\n    try {\\n      // Delete the invite link\\n      deleteMessage(\\n        message,\\n        translate(message.guildID, `monitors/invitefilter:DELETE_REASON`),\\n      );\\n            // Send a message to the user so they know why the message was deleted. Then delete the response after 5 seconds to prevent spam.\\n            sendAlertResponse(message, translate(message.guildID, \\\"monitors/invitefilter:DELETE_ALERT_MESSAGE\\\"), 5)\\n    } catch (error) {\\n      return botCache.eventHandlers.discordLog(error)\\n    }\\n  },\\n});\\n\")), mdx(\"p\", null, \"Nice! Now take some time and add these translation keys to their appropriate files. \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-is-a-monitor","title":"What is a monitor?"},{"url":"#command-handler-monitor","title":"Command Handler Monitor"},{"url":"#creating-invite-filter-monitor","title":"Creating Invite Filter Monitor"},{"url":"#understanding-monitor-options","title":"Understanding Monitor Options","items":[{"url":"#monitor-name","title":"Monitor Name"},{"url":"#ignore-options","title":"Ignore Options"}]},{"url":"#permission-options","title":"Permission Options"},{"url":"#adding-the-code","title":"Adding The Code"}]},"parent":{"__typename":"File","relativePath":"stepbystep/createmonitor.md"},"frontmatter":{"metaTitle":"Creating A Monitor | Discordeno","metaDescription":"Let's create our very own bot with Discordeno!"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/faq","title":"FAQ"}}},{"node":{"fields":{"slug":"/","title":"Discordeno"}}},{"node":{"fields":{"slug":"/stepbystep","title":"Step By Step Guide"}}},{"node":{"fields":{"slug":"/gettingstarted","title":"Getting Started"}}},{"node":{"fields":{"slug":"/djs","title":"Discord.JS to Discordeno Guide"}}},{"node":{"fields":{"slug":"/stepbystep/createevent","title":"Creating Events!"}}},{"node":{"fields":{"slug":"/stepbystep/createmonitor","title":"Creating Monitors!"}}},{"node":{"fields":{"slug":"/stepbystep/createlanguage","title":"Creating Languages!"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/advanced/permlevels","title":"Permission Levels!"}}},{"node":{"fields":{"slug":"/advanced","title":"Advanced Guide"}}},{"node":{"fields":{"slug":"/stepbystep/createbot","title":"Creating The Bot!"}}},{"node":{"fields":{"slug":"/stepbystep/createinhibitor","title":"Creating Inhibitors!"}}},{"node":{"fields":{"slug":"/stepbystep/createcommand","title":"Creating A Command"}}}]}},"pageContext":{"id":"f5bbb667-a1ca-5872-9a8b-85a55b16c857"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}